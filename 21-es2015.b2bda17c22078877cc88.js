(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{wJHT:function(l,n,u){"use strict";u.r(n);var r=u("8Y7J");class a{}var t=u("pMnS"),b=u("3ZQ1"),s=u("vKlC");class i{constructor(){}ngOnInit(){}}var e=r.pb({encapsulation:0,styles:[["h1[_ngcontent-%COMP%]{font-size:2.4rem;font-weight:500;display:inline-block;margin:8px 0}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{color:#333}a[_ngcontent-%COMP%], input[_ngcontent-%COMP%], li[_ngcontent-%COMP%], ol[_ngcontent-%COMP%], p[_ngcontent-%COMP%], ul[_ngcontent-%COMP%]{font-size:1.4rem;line-height:2.4rem;letter-spacing:.3px;letter-spacing:.03rem;font-weight:400;color:#444}li[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0}li[_ngcontent-%COMP%]{padding-bottom:8px}ul[_ngcontent-%COMP%]{list-style-type:square}"]],data:{}});function o(l){return r.Mb(0,[(l()(),r.rb(0,0,null,null,1,"h1",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,["SURDS"])),(l()(),r.rb(2,0,null,null,156,"ol",[],null,null,null,null,null)),(l()(),r.rb(3,0,null,null,41,"li",[],null,null,null,null,null)),(l()(),r.rb(4,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" Definition : "])),(l()(),r.rb(6,0,null,null,5,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" If 'a' is a positive rational number an irrational number of the type "])),(l()(),r.rb(8,0,null,null,2,"app-math-jax",[],null,null,null,b.b,b.a)),r.qb(9,4308992,null,0,s.a,[],null,null),(l()(),r.Kb(10,0,[" \\sqrt[n]a or a^"," "])),(l()(),r.Kb(-1,null,[" is called a Surd. "])),(l()(),r.rb(12,0,null,null,5,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" The symbol "])),(l()(),r.rb(14,0,null,null,2,"app-math-jax",[],null,null,null,b.b,b.a)),r.qb(15,4308992,null,0,s.a,[],null,null),(l()(),r.Kb(16,0,["\\sqrt[n]",""])),(l()(),r.Kb(-1,null,[" is called the radical. Sign 'n' is called the order of the surd and 'a' is called the radicand. "])),(l()(),r.rb(18,0,null,null,5,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" Eg : a) "])),(l()(),r.rb(20,0,null,null,2,"app-math-jax",[],null,null,null,b.b,b.a)),r.qb(21,4308992,null,0,s.a,[],null,null),(l()(),r.Kb(-1,0,["\\sqrt 3 "])),(l()(),r.Kb(-1,null,[" is a surd of order 2 and 3 is the radicand. "])),(l()(),r.rb(24,0,null,null,5,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" b) "])),(l()(),r.rb(26,0,null,null,2,"app-math-jax",[],null,null,null,b.b,b.a)),r.qb(27,4308992,null,0,s.a,[],null,null),(l()(),r.Kb(-1,0,["\\sqrt[5]7 "])),(l()(),r.Kb(-1,null,[" is a surd of order 5 and 7 is the radicand. "])),(l()(),r.rb(30,0,null,null,5,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" Note : "])),(l()(),r.rb(32,0,null,null,2,"app-math-jax",[],null,null,null,b.b,b.a)),r.qb(33,4308992,null,0,s.a,[],null,null),(l()(),r.Kb(34,0,["\\sqrt",""])),(l()(),r.Kb(-1,null,[" is not a surd because is not a rational number. "])),(l()(),r.rb(36,0,null,null,3,"p",[],null,null,null,null,null)),(l()(),r.rb(37,0,null,null,2,"app-math-jax",[],null,null,null,b.b,b.a)),r.qb(38,4308992,null,0,s.a,[],null,null),(l()(),r.Kb(-1,0,["7 + \\sqrt5"])),(l()(),r.rb(40,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),r.rb(41,0,null,null,2,"app-math-jax",[],null,null,null,b.b,b.a)),r.qb(42,4308992,null,0,s.a,[],null,null),(l()(),r.Kb(43,0,["\\sqrt",""])),(l()(),r.Kb(-1,null,[" is not a surd, because = which is a rational number. "])),(l()(),r.rb(45,0,null,null,7,"li",[],null,null,null,null,null)),(l()(),r.rb(46,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" Pure Surd : "])),(l()(),r.rb(48,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),r.rb(49,0,null,null,2,"app-math-jax",[],null,null,null,b.b,b.a)),r.qb(50,4308992,null,0,s.a,[],null,null),(l()(),r.Kb(-1,0,["\\sqrt 5\\;, \\sqrt[5]4"])),(l()(),r.Kb(-1,null,[" are pure surds. "])),(l()(),r.rb(53,0,null,null,7,"li",[],null,null,null,null,null)),(l()(),r.rb(54,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" Mixed Surd : "])),(l()(),r.rb(56,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),r.rb(57,0,null,null,2,"app-math-jax",[],null,null,null,b.b,b.a)),r.qb(58,4308992,null,0,s.a,[],null,null),(l()(),r.Kb(-1,0,[" 5 + \\sqrt[3]7\\;,3\\times\\sqrt 5 "])),(l()(),r.Kb(-1,null,[" are mixed surds, "])),(l()(),r.rb(61,0,null,null,7,"li",[],null,null,null,null,null)),(l()(),r.rb(62,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" Similar Surds or like Surds: "])),(l()(),r.rb(64,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),r.rb(65,0,null,null,2,"app-math-jax",[],null,null,null,b.b,b.a)),r.qb(66,4308992,null,0,s.a,[],null,null),(l()(),r.Kb(-1,0,[" 5 \\times\\sqrt 7\\;,9\\times\\sqrt 7 "])),(l()(),r.Kb(-1,null,[" are like Surds. (Same irrational factors) "])),(l()(),r.rb(69,0,null,null,7,"li",[],null,null,null,null,null)),(l()(),r.rb(70,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" Dissimilar surds or unlike surds : "])),(l()(),r.rb(72,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),r.rb(73,0,null,null,2,"app-math-jax",[],null,null,null,b.b,b.a)),r.qb(74,4308992,null,0,s.a,[],null,null),(l()(),r.Kb(-1,0,[" \\sqrt 5\\;,6\\times\\sqrt 11 "])),(l()(),r.Kb(-1,null,[" are unlike Surds. (Different irrational factors). "])),(l()(),r.rb(77,0,null,null,12,"li",[],null,null,null,null,null)),(l()(),r.rb(78,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" Addition and subraction of surds : "])),(l()(),r.rb(80,0,null,null,3,"p",[],null,null,null,null,null)),(l()(),r.rb(81,0,null,null,2,"app-math-jax",[],null,null,null,b.b,b.a)),r.qb(82,4308992,null,0,s.a,[],null,null),(l()(),r.Kb(-1,0,[" 2\\sqrt 3 + 5\\times\\sqrt 13 = 7\\times\\sqrt 3 "])),(l()(),r.rb(84,0,null,null,3,"p",[],null,null,null,null,null)),(l()(),r.rb(85,0,null,null,2,"app-math-jax",[],null,null,null,b.b,b.a)),r.qb(86,4308992,null,0,s.a,[],null,null),(l()(),r.Kb(-1,0,[" 4\\sqrt 7 - \\sqrt 7 = 3\\times\\sqrt 7 "])),(l()(),r.rb(88,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" Note : Only similar surds are involved. "])),(l()(),r.rb(90,0,null,null,12,"li",[],null,null,null,null,null)),(l()(),r.rb(91,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" Multiplication and division of two surds : "])),(l()(),r.rb(93,0,null,null,3,"p",[],null,null,null,null,null)),(l()(),r.rb(94,0,null,null,2,"app-math-jax",[],null,null,null,b.b,b.a)),r.qb(95,4308992,null,0,s.a,[],null,null),(l()(),r.Kb(96,0,[" \\sqrt 2 \\times \\sqrt 17 = \\sqrt "," "])),(l()(),r.rb(97,0,null,null,3,"p",[],null,null,null,null,null)),(l()(),r.rb(98,0,null,null,2,"app-math-jax",[],null,null,null,b.b,b.a)),r.qb(99,4308992,null,0,s.a,[],null,null),(l()(),r.Kb(100,0,[" \\sqrt[5]"," \\div \\sqrt[5] 6 = \\sqrt[5]4 "])),(l()(),r.rb(101,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" Note : same order for both the surds "])),(l()(),r.rb(103,0,null,null,11,"li",[],null,null,null,null,null)),(l()(),r.rb(104,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" Rationalisation of Surds : "])),(l()(),r.rb(106,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" To rationalise "])),(l()(),r.rb(108,0,null,null,2,"app-math-jax",[],null,null,null,b.b,b.a)),r.qb(109,4308992,null,0,s.a,[],null,null),(l()(),r.Kb(-1,0,["\\sqrt[2]3\\;,we\\;multiply\\;\\sqrt[2]3\\;by\\;\\sqrt 3 "])),(l()(),r.rb(111,0,null,null,3,"p",[],null,null,null,null,null)),(l()(),r.rb(112,0,null,null,2,"app-math-jax",[],null,null,null,b.b,b.a)),r.qb(113,4308992,null,0,s.a,[],null,null),(l()(),r.Kb(-1,0,["\\sqrt 3\\;is\\;a\\;rationalising\\;factor\\;of\\;\\sqrt[2]3"])),(l()(),r.rb(115,0,null,null,19,"li",[],null,null,null,null,null)),(l()(),r.rb(116,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" Rationalising the denominator of Surds : "])),(l()(),r.rb(118,0,null,null,3,"p",[],null,null,null,null,null)),(l()(),r.rb(119,0,null,null,2,"app-math-jax",[],null,null,null,b.b,b.a)),r.qb(120,4308992,null,0,s.a,[],null,null),(l()(),r.Kb(121,0,["","="," \\times ","=","=",""])),(l()(),r.rb(122,0,null,null,5,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" To express "])),(l()(),r.rb(124,0,null,null,2,"app-math-jax",[],null,null,null,b.b,b.a)),r.qb(125,4308992,null,0,s.a,[],null,null),(l()(),r.Kb(126,0,["",""])),(l()(),r.Kb(-1,null,[" with rational denominators "])),(l()(),r.rb(128,0,null,null,0,"p",[],null,null,null,null,null)),(l()(),r.rb(129,0,null,null,4,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" Now rationalise the denominator of "])),(l()(),r.rb(131,0,null,null,2,"app-math-jax",[],null,null,null,b.b,b.a)),r.qb(132,4308992,null,0,s.a,[],null,null),(l()(),r.Kb(133,0,["",""])),(l()(),r.rb(134,0,null,null,0,"p",[],null,null,null,null,null)),(l()(),r.rb(135,0,null,null,14,"li",[],null,null,null,null,null)),(l()(),r.rb(136,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" Rationalisation of binomial quadratic surds : "])),(l()(),r.rb(138,0,null,null,5,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" To express "])),(l()(),r.rb(140,0,null,null,2,"app-math-jax",[],null,null,null,b.b,b.a)),r.qb(141,4308992,null,0,s.a,[],null,null),(l()(),r.Kb(142,0,["",""])),(l()(),r.Kb(-1,null,[" with a rational denominator we "])),(l()(),r.rb(144,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" multiply the numerator and denominator by the conjugate of "])),(l()(),r.rb(146,0,null,null,3,"p",[],null,null,null,null,null)),(l()(),r.rb(147,0,null,null,2,"app-math-jax",[],null,null,null,b.b,b.a)),r.qb(148,4308992,null,0,s.a,[],null,null),(l()(),r.Kb(-1,0,["2 \\sqrt5 - 3 \\sqrt2.\\;that\\;is 2 \\sqrt5 + 3 \\sqrt2"])),(l()(),r.rb(150,0,null,null,8,"li",[],null,null,null,null,null)),(l()(),r.rb(151,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" Comparison of Surds : "])),(l()(),r.rb(153,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" Case I : "])),(l()(),r.rb(155,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" Case 2 : When the order is same. C5 < because 5 < 18. "])),(l()(),r.rb(157,0,null,null,1,"p",[],null,null,null,null,null)),(l()(),r.Kb(-1,null,[" When the order is not same. "]))],function(l,n){l(n,9,0),l(n,15,0),l(n,21,0),l(n,27,0),l(n,33,0),l(n,38,0),l(n,42,0),l(n,50,0),l(n,58,0),l(n,66,0),l(n,74,0),l(n,82,0),l(n,86,0),l(n,95,0),l(n,99,0),l(n,109,0),l(n,113,0),l(n,120,0),l(n,125,0),l(n,132,0),l(n,141,0),l(n,148,0)},function(l,n){l(n,10,0,"\\frac{1}{n}"),l(n,16,0,"{}"),l(n,34,0,"{7+\\sqrt5}"),l(n,43,0,"{81}"),l(n,96,0,"{14}"),l(n,100,0,"{24}"),l(n,121,0,"\\frac {3}{2 \\sqrt2}","\\frac {3}{ 2 \\sqrt2}","\\frac {\\sqrt2}{\\sqrt2}","\\frac {3 \\sqrt2}{2 \\times 2}","\\frac {3 \\sqrt2}{4}"),l(n,126,0,"\\frac{5}{\\sqrt 12}"),l(n,133,0,"\\frac{4}{2 \\sqrt3}"),l(n,142,0,"\\frac{5}{2 \\sqrt5 - 3 \\sqrt2}")})}function p(l){return r.Mb(0,[(l()(),r.rb(0,0,null,null,1,"app-surds",[],null,null,null,o,e)),r.qb(1,114688,null,0,i,[],null,null)],function(l,n){l(n,1,0)},null)}var q=r.nb("app-surds",i,p,{},{},[]),d=u("SVse"),c=u("08mC"),m=u("iInd");class K{}u.d(n,"Unit9ModuleNgFactory",function(){return h});var h=r.ob(a,[],function(l){return r.Ab([r.Bb(512,r.j,r.Z,[[8,[t.a,q]],[3,r.j],r.v]),r.Bb(4608,d.m,d.l,[r.s,[2,d.v]]),r.Bb(1073742336,d.b,d.b,[]),r.Bb(1073742336,c.a,c.a,[]),r.Bb(1073742336,m.m,m.m,[[2,m.r],[2,m.k]]),r.Bb(1073742336,K,K,[]),r.Bb(1073742336,a,a,[]),r.Bb(1024,m.i,function(){return[[{path:"",component:i}]]},[])])})}}]);